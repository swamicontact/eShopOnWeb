name: Build
on:
  push:
    branches:
      - master # or the name of your main branch

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"swamicontact_eShopOnWeb" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build "eShopOnWeb.sln"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"  
          
#Add msbuild to PATH
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

#To build dotnet application using MSBuild
      - name: Build
        run: msbuild ./eShopOnWeb.sln

#To Add nuget artifacts repository as source to push artifacts.
      - name: AddSource
        run: dotnet nuget add source "http://34.121.17.239:8081/repository/nuget-hosted/index.json" --name "nexus" --username  ${{ secrets.WINDOWS_NEXUS_UN }} --password ${{ secrets.WINDOWS_NEXUS_PW }}
      
    #To Push nuget package to artifacts repository using GitHub Secrets.
    #  -  name: Push
         # run: dotnet nuget push "bin/Release/OctocatApp.1.0.0.nupkg"  --api-key ${{ secrets.WINDOWS_NEXUS_API }} --source "nexus"  
